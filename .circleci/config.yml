defaults: &defaults
  working_directory: /src
  docker:
    - image: circleci/python:3.6.8-stretch

version: 2
jobs:

  python_linting:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Pip Install"
          command: pip install flake8>=3.7.7 --user circleci

      - run:
          name: "Python Linting"
          command: cd django/stockpicker && python -m flake8 --ignore E501

  image_build_and_tests_no_push:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Dependencies
          command: |
            set -x
            ./ci_scripts/ci_dependency_install_ubuntu.sh
      - restore_cache:
          key: gitops-{{ checksum "django/requirements.txt" }}
          paths:
            - /caches/baseimage.tar
      - run:
          name: Load image cache
          command: |
            set -x
            mkdir -p /caches
            if [ -e /caches/baseimage.tar ]; then
              docker load -i /caches/baseimage.tar
            fi
      - run:
          name: Build Base Image
          command: |
            set -x
            docker build --cache-from=baseimage -t baseimage -f docker/baseimage/Dockerfile .
      - run:
          name: Save baseimage image
          command: |
            set -x
            docker save -o /caches/baseimage.tar baseimage
      - save_cache:
          key: gitops-{{ checksum "django/requirements.txt" }}
          paths:
            - /caches/baseimage.tar
      - run:
          name: Build Code Image
          command: |
            set -x
            docker build -t codeimage -f docker/codeimage/Dockerfile .
      - run:
          name: Build Webapp Image
          command: |
            set -x
            docker build -t webapp -f docker/webapp/Dockerfile .
      - run:
          name: Build Celery Worker Image
          command: |
            set -x
            docker build -t celeryworker -f docker/celeryworker/Dockerfile .
      - run:
          name: Build Celery Beat Image
          command: |
            set -x
            docker build -t celerybeat -f docker/celerybeat/Dockerfile .
      - run:
          name: Build Stack Tester Image
          command: |
            set -x
            docker build -t stacktest -f docker/stacktest/Dockerfile .
      - run:
          name: Run Django Unit Tests
          command: |
            set -x
            docker-compose -f docker/docker-compose-unit-test.yaml run unit-test
            docker-compose -f docker/docker-compose-unit-test.yaml down
      - run:
          name: Run Integration Tests
          command: |
            set -x
            docker-compose -f docker/docker-compose-local-image-stack.yaml up -d
            docker run -e SERVICE="localhost:8001" --network container:stockpicker_webapp stacktest ./integration-tests.sh \
                || \
                (echo "*** WORKER LOGS:" && echo "$(docker logs stockpicker_worker)" && \
                echo "*** WEBAPP LOGS:" && echo "$(docker logs stockpicker_webapp)")
            docker-compose -f docker/docker-compose-local-image-stack.yaml down

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - python_linting
      - image_build_and_tests_no_push:
          requires:
            - python_linting